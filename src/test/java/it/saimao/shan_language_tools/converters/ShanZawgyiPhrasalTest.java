package it.saimao.shan_language_tools.converters;

import org.junit.Test;

import static it.saimao.shan_language_tools.converters.ShanZawgyiConverter.uni2zg;
import static it.saimao.shan_language_tools.converters.ShanZawgyiConverter.zg2uni;
import static org.junit.Assert.assertEquals;

public class ShanZawgyiPhrasalTest {
    @Test
    public void Test1_Uni2Zg_Poems() {
        assertEquals("ꨀ ဝꨣꨳ ꨀꨯꨲ ꨀြပ္ꨳတꨯꨲမꨯꨵꨓိူဝ္ꨀြꨓ္း။ ꨁ ဝꨣꨳ ꨁꨯꨲ ꨬမꨳမꨓ္းပꨯꨲမꨣးငြမ္း။ င ဝꨣꨳ ငူး လိူꨓ္ꨳမꨣးꨅူးတူဝ္ꨁꨱတ္ꨲ။", uni2zg("ၵ ဝႃႈ ၵႆႇ ၵွပ်ႈတႆႇမႆႉၼိူဝ်ၵွၼ်း။ ၶ ဝႃႈ ၶႆႇ မႄႈမၼ်းပႆႇမႃးငွမ်း။ င ဝႃႈ ငူး လိူၼ်ႈမႃးၸူးတူဝ်ၶဵတ်ႇ။"));
        assertEquals("ꨅ ဝꨣꨳ ꨅꨤင္ꨵ ပꨯꨡူင္ꨵꨡꨤင္ꨵꨅြမ္းတꨤင္း။ သ ဝꨣꨳ သိူဝ္ မီးယူꨲꨓိူဝ္လꨣꨲꨟꨣꨵ။ ꨉ ဝꨣꨳ ꨉြင္း သꨱင္ꨀြင္မြင္းပꨓ္းꨅြတ္ꨲ။", uni2zg("ၸ ဝႃႈ ၸၢင်ႉ ပႆဢူင်ႉဢၢင်ႉၸွမ်းတၢင်း။ သ ဝႃႈ သိူဝ် မီးယူႇၼိူဝ်လႃႇႁႃႉ။ ၺ ဝႃႈ ၺွင်း သဵင်ၵွင်မွင်းပၼ်းၸွတ်ႇ။"));
        assertEquals("တ ဝꨣꨳ တဝ္ꨲ တီꨳယူꨲꨀဝ္ꨲ ꨟိမ္းꨓြင္။ ထ ဝꨣꨳ ထꨯ တမ္းယꨯဝꨯꨵသꨤမ္မꨤꨀ္ꨳ။ ꨓ ဝꨣꨳ ꨓူ ေမꨣးꨅူꨅူꨅြမ္းꨅြꨀ္ꨵ။", uni2zg("တ ဝႃႈ တဝ်ႇ တီႈယူႇၵဝ်ႇ ႁိမ်းၼွင်။ ထ ဝႃႈ ထႆ တမ်းယႆဝႆႉသၢမ်မၢၵ်ႈ။ ၼ ဝႃႈ ၼူ မေႃးၸူၸူၸွမ်းၸွၵ်ႉ။"));
        assertEquals("ပ ဝꨣꨳ ပꨣ ꨡꨰဝ္ꨲလုꨉ္းꨟꨣꨀိꨓ္ယိူဝ္ꨲ။ ꨕ ဝꨣꨳ ꨕိုင္ꨳ ꨕြမ္ꨵလုပ္ꨲယိုင္ꨳꨟꨱတ္းꨟူင္း။ ꨘ ဝꨣꨳ ꨘꨣꨵ ꨓꨯꨵပꨱꨓ္ꨘꨣꨵꨀꨤင္ꨟꨤဝ္။", uni2zg("ပ ဝႃႈ ပႃ ဢႅဝ်ႇလုၺ်းႁႃၵိၼ်ယိူဝ်ႇ။ ၽ ဝႃႈ ၽိုင်ႈ ၽွမ်ႉလုပ်ႇယိုင်ႈႁဵတ်းႁူင်း။ ၾ ဝႃႈ ၾႃႉ ၼႆႉပဵၼ်ၾႃႉၵၢင်ႁၢဝ်။"));
        assertEquals("မ ဝꨣꨳ ꨬမꨳ သြꨓ္ယꨱꨓ္ꨲꨬငꨳလုꨀ္ꨳလꨤင္း။ ယ ဝꨣꨳ ယုင္း ꨀꨤင္သုတ္းမုင္းꨅင္ꨲလြတ္ꨳ။ ရ ဝꨣꨳ ရꨱꨓ္း ꨡꨤꨓ္ꨲသြꨓ္ꨟꨱꨓ္းတီꨳပြင္ꨲ။", uni2zg("မ ဝႃႈ မႄႈ သွၼ်ယဵၼ်ႇငႄႈလုၵ်ႈလၢင်း။ ယ ဝႃႈ ယုင်း ၵၢင်သုတ်းမုင်းၸင်ႇလွတ်ႈ။ ရ ဝႃႈ ရဵၼ်း ဢၢၼ်ႇသွၼ်ႁဵၼ်းတီႈပွင်ႇ။"));
        assertEquals("လ ဝꨣꨳ ေလꨣꨵ ေꨟꨣꨳꨀꨮꨣꨲေတꨣꨵꨁူဝ္းသူꨓ္။ ဝ ဝꨣꨳ ဝူဝ္း တူဝ္ေတꨣꨵꨁူဝ္းꨀꨮꨣꨲꨀꨤတ္ꨲ။ ꨟ ဝꨣꨳ ꨟိူဝ္း ဝꨤꨯꨳလတ္းမိူဝ္းꨁꨤမ္ꨳတꨣꨳ။ ꨡ ဝꨣꨳ ꨡြꨯꨳ ꨅꨱမ္းꨅြꨯꨳꨅြꨯꨳꨀိꨓ္ဝꨤꨓ္။", uni2zg("လ ဝႃႈ လေႃႉ ႁေႃႈၵႂႃႇတေႃႉၶူဝ်းသူၼ်။ ဝ ဝႃႈ ဝူဝ်း တူဝ်တေႃႉၶူဝ်းၵႂႃႇၵၢတ်ႇ။ ႁ ဝႃႈ ႁိူဝ်း ဝၢႆႈလတ်းမိူဝ်းၶၢမ်ႈတႃႈ။ ဢ ဝႃႈ ဢွႆႈ ၸဵမ်းၸွႆႈၸွႆႈၵိၼ်ဝၢၼ်။"));
    }

    @Test
    public void Test2_Uni2Zg_Songs() {
        assertEquals("ꨀဝ္ꨁꨣꨳꨓꨯꨵ ပꨱꨓ္ꨅꨤꨯးဝꨤꨓ္ꨳꨓြꨀ္ꨳ ꨡမ္ꨲတြꨓ္ꨵယꨤမ္ꨳ ꨕꨰဝ္ꨓꨮ္းဝꨱင္းေသပြꨀ္ꨳ ငိꨓ္းꨁꨤဝ္ဝꨣꨳ ပိူꨓ္ꨳမꨣးလꨤတ္ꨳꨡုပ္ꨲ ꨓꨮ္းꨁူးꨓꨮ္းဝꨱင္းꨓꨯꨵ မီးမꨱဝ္းꨓꨓ္ꨵ မꨱဝ္းꨓꨯꨵ မီးမꨱဝ္းမꨓ္းေꨅးဝꨯꨵ မꨓ္းꨀꨰꨓ္ꨲလီꨁဝ္ꨳꨅꨮ္", uni2zg("ၵဝ်ၶႃႈၼႆႉ ပဵၼ်ၸၢႆးဝၢၼ်ႈၼွၵ်ႈ ဢမ်ႇတွၼ်ႉယၢမ်ႈ ၽႅဝ်ၼႂ်းဝဵင်းသေပွၵ်ႈ ငိၼ်းၶၢဝ်ဝႃႈ ပိူၼ်ႈမႃးလၢတ်ႈဢုပ်ႇ ၼႂ်းၶူးၼႂ်းဝဵင်းၼႆႉ မီးမဵဝ်းၼၼ်ႉ မဵဝ်းၼႆႉ မီးမဵဝ်းမၼ်းၸေးဝႆႉ မၼ်းၵႅၼ်ႇလီၶဝ်ႈၸႂ်"));
    }

    @Test
    public void Test3_Uni2Zg_Pangram() {
        assertEquals("ေပꨣးꨁꨮ္ꨳꨀ်ꨁꨰꨓ္ꨲꨀꨮꨣꨲꨅိုင္ ေတလꨯꨳꨟြင္ꨵၾသꨣꨲလီရꨱꨓ္းꨟူꨵသြꨓ္ꨕိုꨀ္း ꨉꨣးမိူဝ္ꨳꨘꨣꨵပꨤင္ꨲ ꨅꨤꨯးသꨤင္ꨲꨬလꨳ ယိင္းꨡိူꨉ္ꨵေပꨓိုꨀ္း သိူဝ္းေꨀ်ꨣꨲတိုꨀ္းထꨣꨳ ꨅံꨬလꨳတင္းꨀꨯꨓꨓ္ꨵသꨣꨶ။", uni2zg("ပေႃးၶႂ်ႈၵျၶႅၼ်ႇၵႂႃႇၸိုင် တေလႆႈႁွင်ႉသြႃႇလီရဵၼ်းႁူႉသွၼ်ၽိုၵ်း ၺႃးမိူဝ်ႈၾႃႉပၢင်ႇ ၸၢႆးသၢင်ႇလႄႈ ယိင်းဢိူၺ်ႉပေၼိုၵ်း သိူဝ်းၵျေႃႇတိုၵ်းထႃႈ ၸံလႄႈတင်းၵႆၼၼ်ႉသႃႊ။"));
        assertEquals("မိူဝ္ꨳꨓꨯꨵ ꨕြင္းသင္ꨲꨃꨣꨲရတꨓꨣꨲ ေꨟꨣးတꨱတ္ꨳပꩦ္ꨵꩧꨤꨓ္းၾတꨣး ꨉꨣးꨅဝ္ꨳꨑꨣꨲꨓ ေꧤꨣးꨂ ꨖလ ꩩꨓ ꨟꨰင္းယꨮ္ꨲꨓံထꨣး ꨂုꨎပူꨲꨇꨣꨲ ꨡꨣꨲယုဝꩨ္ꨵꩩꨓꨬလꨳ ꨁူဝ္းꨁြင္ေꨅးပꨣး ꨘီလူးေꨀ်ꨣꨲꨡꨣꨲꨠꨣꨲဝꨀ ꨅိုင္ꨳမꧡ္ꧢိမ လꨯꨳꨟုꨀꨮꨣꨲꨀ်ꨣꨵꨓꨣꨲ ေပꨣးꨟြင္ꨵသꨣꨲထုသꨤမ္ꨁꨣးယဝ္ꨵသꨣꨶ။", uni2zg("မိူဝ်ႈၼႆႉ ၽွင်းသင်ႇꧠႃႇရတၼႃႇ ႁေႃးတဵတ်ႈပꩦ်ႉꩧၢၼ်းတြႃး ၺႃးၸဝ်ႈၻႃႇၼ ေꧤႃးၷ ၿလ ꩩၼ ႁႅင်းယႂ်ႇၼံထႃး ၷုꧣပူႇꩡႃႇ ဢႃႇယုဝꩨ်ႉꩩၼလႄႈ ၶူဝ်းၶွင်ၸေးပႃး ၾီလူးၵျေႃႇဢႃႇꩮႃႇဝၵ ၸိုင်ႈမꧡ်ꧢိမ လႆႈႁုၵႂႃႇၵျႃႉၼႃႇ ပေႃးႁွင်ႉသႃႇထုသၢမ်ၶႃးယဝ်ႉသႃႊ။"));
    }

    @Test
    public void Test1_Zg2Uni_Poems() {
        assertEquals("ၵ ဝႃႈ ၵႆႇ ၵွပ်ႈတႆႇမႆႉၼိူဝ်ၵွၼ်း။ ၶ ဝႃႈ ၶႆႇ မႄႈမၼ်းပႆႇမႃးငွမ်း။ င ဝႃႈ ငူး လိူၼ်ႈမႃးၸူးတူဝ်ၶဵတ်ႇ။", zg2uni("ꨀ ဝꨣꨳ ꨀꨯꨲ ꨀြပ္ꨳတꨯꨲမꨯꨵꨓိူဝ္ꨀြꨓ္း။ ꨁ ဝꨣꨳ ꨁꨯꨲ ꨬမꨳမꨓ္းပꨯꨲမꨣးငြမ္း။ င ဝꨣꨳ ငူး လိူꨓ္ꨳမꨣးꨅူးတူဝ္ꨁꨱတ္ꨲ။"));
        assertEquals("ၸ ဝႃႈ ၸၢင်ႉ ပႆဢူင်ႉဢၢင်ႉၸွမ်းတၢင်း။ သ ဝႃႈ သိူဝ် မီးယူႇၼိူဝ်လႃႇႁႃႉ။ ၺ ဝႃႈ ၺွင်း သဵင်ၵွင်မွင်းပၼ်းၸွတ်ႇ", zg2uni("ꨅ ဝꨣꨳ ꨅꨤင္ꨵ ပꨯꨡူင္ꨵꨡꨤင္ꨵꨅြမ္းတꨤင္း။ သ ဝꨣꨳ သိူဝ္ မီးယူꨲꨓိူဝ္လꨣꨲꨟꨣꨵ။ ꨉ ဝꨣꨳ ꨉြင္း သꨱင္ꨀြင္မြင္းပꨓ္းꨅြတ္ꨲ"));
        assertEquals("တ ဝႃႈ တဝ်ႇ တီႈယူႇၵဝ်ႇ ႁိမ်းၼွင်။ ထ ဝႃႈ ထႆ တမ်းယႆဝႆႉသၢမ်မၢၵ်ႈ။ ၼ ဝႃႈ ၼူ မေႃးၸူၸူၸွမ်းၸွၵ်ႉ။", zg2uni("တ ဝꨣꨳ တဝ္ꨲ တီꨳယူꨲꨀဝ္ꨲ ꨟိမ္းꨓြင္။ ထ ဝꨣꨳ ထꨯ တမ္းယꨯဝꨯꨵသꨤမ္မꨤꨀ္ꨳ။ ꨓ ဝꨣꨳ ꨓူ ေမꨣးꨅူꨅူꨅြမ္းꨅြꨀ္ꨵ။"));
        assertEquals("ပ ဝႃႈ ပႃ ဢႅဝ်ႇလုၺ်းႁႃၵိၼ်ယိူဝ်ႇ။ ၽ ဝႃႈ ၽိုင်ႈ ၽွမ်ႉလုပ်ႇယိုင်ႈႁဵတ်းႁူင်း။ ၾ ဝႃႈ ၾႃႉ ၼႆႉပဵၼ်ၾႃႉၵၢင်ႁၢဝ်။", zg2uni("ပ ဝꨣꨳ ပꨣ ꨡꨰဝ္ꨲလုꨉ္းꨟꨣꨀိꨓ္ယိူဝ္ꨲ။ ꨕ ဝꨣꨳ ꨕိုင္ꨳ ꨕြမ္ꨵလုပ္ꨲယိုင္ꨳꨟꨱတ္းꨟူင္း။ ꨘ ဝꨣꨳ ꨘꨣꨵ ꨓꨯꨵပꨱꨓ္ꨘꨣꨵꨀꨤင္ꨟꨤဝ္။"));
        assertEquals("မ ဝႃႈ မႄႈ သွၼ်ယဵၼ်ႇငႄႈလုၵ်ႈလၢင်း။ ယ ဝႃႈ ယုင်း ၵၢင်သုတ်းမုင်းၸင်ႇလွတ်ႈ။ ရ ဝႃႈ ရဵၼ်း ဢၢၼ်ႇသွၼ်ႁဵၼ်းတီႈပွင်ႇ။", zg2uni("မ ဝꨣꨳ ꨬမꨳ သြꨓ္ယꨱꨓ္ꨲꨬငꨳလုꨀ္ꨳလꨤင္း။ ယ ဝꨣꨳ ယုင္း ꨀꨤင္သုတ္းမုင္းꨅင္ꨲလြတ္ꨳ။ ရ ဝꨣꨳ ရꨱꨓ္း ꨡꨤꨓ္ꨲသြꨓ္ꨟꨱꨓ္းတီꨳပြင္ꨲ။"));
        assertEquals("လ ဝႃႈ လေႃႉ ႁေႃႈၵႂႃႇတေႃႉၶူဝ်းသူၼ်။ ဝ ဝႃႈ ဝူဝ်း တူဝ်တေႃႉၶူဝ်းၵႂႃႇၵၢတ်ႇ။ ႁ ဝႃႈ ႁိူဝ်း ဝၢႆႈလတ်းမိူဝ်းၶၢမ်ႈတႃႈ။ ဢ ဝႃႈ ဢွႆႈ ၸဵမ်းၸွႆႈၸွႆႈၵိၼ်ဝၢၼ်။", zg2uni("လ ဝꨣꨳ ေလꨣꨵ ေꨟꨣꨳꨀꨮꨣꨲေတꨣꨵꨁူဝ္းသူꨓ္။ ဝ ဝꨣꨳ ဝူဝ္း တူဝ္ေတꨣꨵꨁူဝ္းꨀꨮꨣꨲꨀꨤတ္ꨲ။ ꨟ ဝꨣꨳ ꨟိူဝ္း ဝꨤꨯꨳလတ္းမိူဝ္းꨁꨤမ္ꨳတꨣꨳ။ ꨡ ဝꨣꨳ ꨡြꨯꨳ ꨅꨱမ္းꨅြꨯꨳꨅြꨯꨳꨀိꨓ္ဝꨤꨓ္။"));
    }

    @Test
    public void Test2_Zg2Uni_Pangram() {
        assertEquals("ပေႃးၶႂ်ႈၵျၶႅၼ်ႇၵႂႃႇၸိုင် တေလႆႈႁွင်ႉသြႃႇလီရဵၼ်းႁူႉသွၼ်ၽိုၵ်း ၺႃးမိူဝ်ႈၾႃႉပၢင်ႇ ၸၢႆးသၢင်ႇလႄႈ ယိင်းဢိူၺ်ႉပေၼိုၵ်း သိူဝ်းၵျေႃႇတိုၵ်းထႃႈ ၸံလႄႈတင်းၵႆၼၼ်ႉသႃႊ။", zg2uni("ေပꨣးꨁꨮ္ꨳꨀ်ꨁꨰꨓ္ꨲꨀꨮꨣꨲꨅိုင္ ေတလꨯꨳꨟြင္ꨵၾသꨣꨲလီရꨱꨓ္းꨟူꨵသြꨓ္ꨕိုꨀ္း ꨉꨣးမိူဝ္ꨳꨘꨣꨵပꨤင္ꨲ ꨅꨤꨯးသꨤင္ꨲꨬလꨳ ယိင္းꨡိူꨉ္ꨵေပꨓိုꨀ္း သိူဝ္းေꨀ်ꨣꨲတိုꨀ္းထꨣꨳ ꨅံꨬလꨳတင္းꨀꨯꨓꨓ္ꨵသꨣꨶ။"));
        assertEquals("မိူဝ်ႈၼႆႉ ၽွင်းသင်ႇꧠႃႇရတၼႃႇ ႁေႃးတဵတ်ႈပꩦ်ႉꩧၢၼ်းတြႃး ၺႃးၸဝ်ႈၻႃႇၼ ေꧤႃးၷ ၿလ ꩩၼ ႁႅင်းယႂ်ႇၼံထႃး ၷုꧣပူႇꩡႃႇ ဢႃႇယုဝꩨ်ႉꩩၼလႄႈ ၶူဝ်းၶွင်ၸေးပႃး ၾီလူးၵျေႃႇဢႃႇꩮႃႇဝၵ ၸိုင်ႈမꧡ်ꧢိမ လႆႈႁုၵႂႃႇၵျႃႉၼႃႇ ပေႃးႁွင်ႉသႃႇထုသၢမ်ၶႃးယဝ်ႉသႃႊ။", zg2uni("မိူဝ္ꨳꨓꨯꨵ ꨕြင္းသင္ꨲꨃꨣꨲရတꨓꨣꨲ ေꨟꨣးတꨱတ္ꨳပꩦ္ꨵꩧꨤꨓ္းၾတꨣး ꨉꨣးꨅဝ္ꨳꨑꨣꨲꨓ ေꧤꨣးꨂ ꨖလ ꩩꨓ ꨟꨰင္းယꨮ္ꨲꨓံထꨣး ꨂုꨎပူꨲꨇꨣꨲ ꨡꨣꨲယုဝꩨ္ꨵꩩꨓꨬလꨳ ꨁူဝ္းꨁြင္ေꨅးပꨣး ꨘီလူးေꨀ်ꨣꨲꨡꨣꨲꨠꨣꨲဝꨀ ꨅိုင္ꨳမꧡ္ꧢိမ လꨯꨳꨟုꨀꨮꨣꨲꨀ်ꨣꨵꨓꨣꨲ ေပꨣးꨟြင္ꨵသꨣꨲထုသꨤမ္ꨁꨣးယဝ္ꨵသꨣꨶ။"));
    }

}
